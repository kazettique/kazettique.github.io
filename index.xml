<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Woody's Blog</title><link>https://kazettique.github.io/</link><description>Recent content on Woody's Blog</description><generator>Hugo -- gohugo.io</generator><language>tw</language><lastBuildDate>Thu, 01 Jul 2021 22:59:18 +0800</lastBuildDate><atom:link href="https://kazettique.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>關於我</title><link>https://kazettique.github.io/about/</link><pubDate>Fri, 02 Jul 2021 13:00:25 +0800</pubDate><guid>https://kazettique.github.io/about/</guid><description>Hi~ 我是 Woody 👋 在某個因緣際會下，轉職開始寫程式，現在是小小前端工程師 🙃 這裡會整理出我自己的筆記，如果能幫助到各位就太好了！ 曾經在日本留學，打滾了</description></item><item><title>「高效工程師」筆記 - 第三章：製作待辦清單</title><link>https://kazettique.github.io/posts/effective-engineer/03/</link><pubDate>Thu, 01 Jul 2021 22:59:18 +0800</pubDate><guid>https://kazettique.github.io/posts/effective-engineer/03/</guid><description>優先度排程（Prioritization）是一門學問，就跟其他的技能一樣需要不斷地練習，高效工程師不斷地再持續精進這件事。 建立一個好的待辦事</description></item><item><title>「高效工程師」筆記 - 第二章：優化學習</title><link>https://kazettique.github.io/posts/effective-engineer/02/</link><pubDate>Tue, 29 Jun 2021 22:40:53 +0800</pubDate><guid>https://kazettique.github.io/posts/effective-engineer/02/</guid><description>優化的學習方式能帶來更高的效益（leverage），如果我們要增進自我能力，「成長型思維」是不可或缺的因素。 實踐成長型思維 固定型思維（Fix</description></item><item><title>「高效工程師」筆記 - 第一章：專注在高效的活動</title><link>https://kazettique.github.io/posts/effective-engineer/01/</link><pubDate>Sat, 26 Jun 2021 13:29:11 +0800</pubDate><guid>https://kazettique.github.io/posts/effective-engineer/01/</guid><description>作者 Edmond 在 Quora1 工作的時候，因為公司人事擴編，所以自願投入工程師招募的準備作業。身為一個以往都在寫程式開發的工程師而言，他開始思索，要如何讓新進的</description></item><item><title>「高效工程師」筆記 - 前言</title><link>https://kazettique.github.io/posts/effective-engineer/00/</link><pubDate>Sat, 19 Jun 2021 17:56:12 +0800</pubDate><guid>https://kazettique.github.io/posts/effective-engineer/00/</guid><description>在因緣際會下，我閱讀了「高效工程師」（Effective Engineer）這本書，它是公司指定讀物。
在閱讀的過程中，整理出一些筆記，裡面提到對於工程師而言很好的觀念。筆記內容會參雜原文的中文翻譯（用我自己的話翻譯，非 Google 機器翻譯）以及自身的看法，若是我自己覺得翻譯不太好的地方，會附上英文原文在註解，以免誤導。
作者 Edmond Lau 是來自矽谷的工程師，曾經待過很多知名的科技公司，像是：Google、Quora、Ooyala、Quip。他曾一週的工作 70-80 小時，曾經在晚餐後繼續工作；或是假日拜訪親戚時，仍不忘在空檔時間回覆公司郵件。大家都希望能用更多的時間提高更多的產值，但這讓 Edmond 不禁思索：「付出這麼多的時間，才是通往成功之路必須付出的代價嗎？」
我們都深知高工時帶來的極大負面影響，包括生產力低落、職業倦怠、容易犯低級錯誤 ⋯⋯ 等等。因此，在時間有限且要提高生產力兩個制約條件下，所得出的結論，就是提升工作效率，而作者 Edmond 也在本書中從不同的面相，分享他的親身經歷、科技公司內部的政策、文化來告訴我們，要如何成為一個高效率的工程師。
作者在最後的章節也說明：本書的概念不僅限於「工程師」這個職業，也不僅限於職場，適用於任何事情上
無論正在閱讀的你/妳是否是工程師，希望我的筆記或多或少對你/妳有幫助！
Not working hard, but working SMART!</description></item><item><title>React-Beautiful-DnD 簡單示範</title><link>https://kazettique.github.io/posts/react-beautiful-dnd-example/</link><pubDate>Thu, 30 Apr 2020 22:56:17 +0800</pubDate><guid>https://kazettique.github.io/posts/react-beautiful-dnd-example/</guid><description>React-Beautiful-DnD是一個很有人氣的 DnD 套件，除了基本的 Drag &amp;amp; Drop 功能之外，還有優雅的拖曳動畫、鍵盤拖曳支援等，使用起來也很容易</description></item><item><title>React-DnD 簡單示範</title><link>https://kazettique.github.io/posts/react-dnd-example/</link><pubDate>Thu, 23 Apr 2020 21:43:49 +0800</pubDate><guid>https://kazettique.github.io/posts/react-dnd-example/</guid><description>基本概念 Image Reference HTML5 提供原生的HTML5 Drag &amp;amp; Drop API（以下簡稱 HTML5 DnD）實現 DOM 元素拖曳的功能。但是由於在 React 的生態底下，並不適合操作實體 DOM，因此</description></item></channel></rss>